--- a/lua/lspconfig/configs/astro.lua	1970-01-01 07:00:01.000000000 +0700
+++ b/lua/lspconfig/configs/astro.lua	2025-01-26 17:11:51.698592649 +0700
@@ -1,26 +1,26 @@
-local util = require 'lspconfig.util'
+local util = require("lspconfig.util")

 local function get_typescript_server_path(root_dir)
-  local project_root = vim.fs.find('node_modules', { path = root_dir, upward = true })[1]
-  return project_root and (project_root .. '/typescript/lib') or ''
+	local project_root = vim.fs.dirname(vim.fs.find("node_modules", { path = root_dir, upward = true })[1])
+	return project_root and (project_root .. "/node_modules/typescript/lib") or ""
 end

 return {
-  default_config = {
-    cmd = { 'astro-ls', '--stdio' },
-    filetypes = { 'astro' },
-    root_dir = util.root_pattern('package.json', 'tsconfig.json', 'jsconfig.json', '.git'),
-    init_options = {
-      typescript = {},
-    },
-    on_new_config = function(new_config, new_root_dir)
-      if vim.tbl_get(new_config.init_options, 'typescript') and not new_config.init_options.typescript.tsdk then
-        new_config.init_options.typescript.tsdk = get_typescript_server_path(new_root_dir)
-      end
-    end,
-  },
-  docs = {
-    description = [[
+	default_config = {
+		cmd = { "astro-ls", "--stdio" },
+		filetypes = { "astro" },
+		root_dir = util.root_pattern("package.json", "tsconfig.json", "jsconfig.json", ".git"),
+		init_options = {
+			typescript = {},
+		},
+		on_new_config = function(new_config, new_root_dir)
+			if vim.tbl_get(new_config.init_options, "typescript") and not new_config.init_options.typescript.tsdk then
+				new_config.init_options.typescript.tsdk = get_typescript_server_path(new_root_dir)
+			end
+		end,
+	},
+	docs = {
+		description = [[
 https://github.com/withastro/language-tools/tree/main/packages/language-server

 `astro-ls` can be installed via `npm`:
@@ -28,5 +28,5 @@
 npm install -g @astrojs/language-server
 ```
 ]],
-  },
+	},
 }
